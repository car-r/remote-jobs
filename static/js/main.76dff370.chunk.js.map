{"version":3,"sources":["components/HeaderElements.js","components/header/index.js","components/card/CardElements.js","components/card/index.js","components/card-list/CardListElements.js","components/card-list/index.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","header","HeaderH1","h1","Header","JobCard","div","JobTitle","p","CompanyContainer","CompanySpan","span","JobCompany","JobLocation","JobStatsContainer","JobStatsGrid","JobStatsType","JobType","JobStatsSalary","JobSalary","Card","job","title","company_name","candidate_required_location","length","job_type","salary","CardGrid","CardList","jobs","map","id","App","useState","setJobs","useEffect","a","axios","result","console","log","data","fetchJobs","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAEaA,EAAkBC,IAAOC,OAAV,mEAKfC,EAAWF,IAAOG,GAAV,uE,OCINC,EARA,WACX,OACI,cAACL,EAAD,UACI,cAACG,EAAD,mCCJCG,EAAUL,IAAOM,IAAV,0LAUPC,EAAWP,IAAOQ,EAAV,uGAMRC,EAAmBT,IAAOM,IAAV,wGAYhBI,GALcV,IAAOQ,EAAV,uEAKGR,IAAOW,KAAV,gJAQXC,EAAaZ,IAAOQ,EAAV,8HAQVK,EAAcb,IAAOQ,EAAV,qEAKXM,EAAoBd,IAAOM,IAAV,oGAMjBS,EAAef,IAAOM,IAAV,kIAQZU,EAAehB,IAAOQ,EAAV,mIAOZS,EAAUjB,IAAOQ,EAAV,wIAOPU,EAAiBlB,IAAOQ,EAAV,qIAOdW,EAAYnB,IAAOQ,EAAV,yGCpDPY,EA/BF,SAAC,GAAW,IAAVC,EAAS,EAATA,IACX,OACI,eAAChB,EAAD,WACI,cAACE,EAAD,UAAWc,EAAIC,QACX,eAACb,EAAD,WACI,eAACG,EAAD,WAAaS,EAAIE,aAAjB,IAA+B,cAACb,EAAD,mBAE9BW,EAAIG,4BAA4BC,OAAS,EACtC,cAACZ,EAAD,UAAcQ,EAAIG,8BAClB,cAACX,EAAD,sCAIZ,cAACC,EAAD,UACI,eAACC,EAAD,WACI,cAACC,EAAD,mBACkB,cAAjBK,EAAIK,SACD,cAACT,EAAD,wBACA,cAACA,EAAD,UAAUI,EAAIK,WAElB,cAACR,EAAD,qBACCG,EAAIM,OAAOF,OAAS,EACjB,cAACN,EAAD,UAAYE,EAAIM,SAChB,cAACR,EAAD,2BCxBXS,EAAW5B,IAAOM,IAAV,mMCYNuB,EAVE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACI,cAACF,EAAD,UACKE,EAAKC,KAAI,SAAAV,GAAG,OACT,cAAC,EAAD,CAAMA,IAAKA,GAAUA,EAAIW,UCsB1BC,MAxBf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNJ,EADM,KACAK,EADA,KAgBb,OAbAC,qBAAU,YAEO,uCAAG,4BAAAC,EAAA,sEACKC,IACnB,gDAFc,OACVC,EADU,OAIhBC,QAAQC,IAAIF,EAAOG,KAAKZ,MACxBK,EAAQI,EAAOG,KAAKZ,MALJ,2CAAH,qDAQfa,KACC,IAGD,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUd,KAAMA,QCbPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76dff370.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.header`\n    display: flex;\n    height: 7rem;\n`\n\nexport const HeaderH1 = styled.h1`\n    font-size: 2rem;\n    margin: 0 auto;\n`","import React from 'react'\nimport { HeaderContainer, HeaderH1 } from '../HeaderElements'\n\nconst Header = () => {\n    return (\n        <HeaderContainer>\n            <HeaderH1>Remote Job Finder</HeaderH1>\n        </HeaderContainer>\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\";\n\nexport const JobCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    padding: 1.5em;\n    border-radius: 1em;\n    width: 380px;\n    margin: 0 auto;\n`\n\nexport const JobTitle = styled.p`\n    font-size: 1.35rem;\n    font-weight: bold;\n    margin-bottom: .5em;\n`\n\nexport const CompanyContainer = styled.div`\n    display: flex;\n    margin-bottom: 1.75em;\n    align-items: center;\n\n`\n\nexport const CompanyText = styled.p`\n    margin: 0;\n    padding-right: 0.5em;\n`\n\nexport const CompanySpan = styled.span`\n    padding-right: 0.25em;\n    padding-left: 0.5em;\n    font-weight: 400;\n    font-size: 1rem;\n    margin: 0;\n`\n\nexport const JobCompany = styled.p`\n    font-weight: bold;\n    margin-bottom: 1em;\n    margin: 0;\n    padding-right: 0.5em;\n    \n`\n\nexport const JobLocation = styled.p`\n    margin-bottom: 1em;\n    margin: 0;\n`\n\nexport const JobStatsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: auto;\n`\n\nexport const JobStatsGrid = styled.div`\n    display: grid;\n    grid-template-areas: \n    \"type salary\"\n    \"type-data salary-data\";\n    \n`\n\nexport const JobStatsType = styled.p`\n    font-size: .9rem;\n    grid-area: type;\n    margin-bottom: .5em;\n    text-transform: uppercase;\n`\n\nexport const JobType = styled.p`\n    font-weight: bold;\n    grid-area: type-data;\n    font-size: 1.1rem;\n    text-transform: capitalize;\n`\n\nexport const JobStatsSalary = styled.p`\n    font-size: .9rem;\n    grid-area: salary;\n    margin-bottom: .5em;\n    text-transform: uppercase;\n`\n\nexport const JobSalary = styled.p`\n    font-weight: bold;\n    grid-area: salary-data;\n    font-size: 1.1rem;\n`\n\n\n\n","import React from 'react'\nimport { CompanyContainer, CompanySpan, JobCard, JobCompany, JobLocation, JobSalary, JobStatsContainer, JobStatsGrid, JobStatsSalary, JobStatsType, JobTitle, JobType } from './CardElements'\n\nconst Card = ({job}) => {\n    return (\n        <JobCard>\n            <JobTitle>{job.title}</JobTitle>\n                <CompanyContainer>\n                    <JobCompany>{job.company_name} <CompanySpan>-</CompanySpan></JobCompany>\n                    \n                    {job.candidate_required_location.length > 1 ? (\n                        <JobLocation>{job.candidate_required_location}</JobLocation>\n                    ) : <JobLocation>Inquire for location</JobLocation> }\n                    \n                </CompanyContainer>   \n\n            <JobStatsContainer>\n                <JobStatsGrid>\n                    <JobStatsType>Type</JobStatsType>\n                    {job.job_type === 'full_time' ? (\n                        <JobType>Full Time</JobType>\n                    ) : <JobType>{job.job_type}</JobType> }\n                    \n                    <JobStatsSalary>Salary</JobStatsSalary>\n                    {job.salary.length > 1 ? (\n                        <JobSalary>{job.salary}</JobSalary>\n                    ) : <JobSalary>N/A</JobSalary> }\n                \n                </JobStatsGrid>\n            </JobStatsContainer>\n        </JobCard>\n    )\n}\n\nexport default Card\n","import styled from \"styled-components\";\n\nexport const CardGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n    grid-gap: 1.5em;\n    padding-top: 1.5em;\n    width: auto;\n    margin: 0;\n`","import React from 'react'\nimport Card from '../card'\nimport { CardGrid } from './CardListElements'\n\nconst CardList = ({jobs}) => {\n    return (\n        <CardGrid>\n            {jobs.map(job => (\n                <Card job={job} key={job.id}/>\n            ))}\n        </CardGrid>\n    )\n}\n\nexport default CardList\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport Header from './components/header';\nimport CardList from './components/card-list';\n\nfunction App() {\n  const [jobs, setJobs] = useState([])\n\n  useEffect(() => {\n    // fetch jobs from Remotive API with async await syntax and axios\n    const fetchJobs = async () => {\n      const result = await axios(\n        'https://remotive.io/api/remote-jobs?limit=20'\n      )\n      console.log(result.data.jobs)\n      setJobs(result.data.jobs)\n    }\n    // run fetchJobs\n    fetchJobs()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <CardList jobs={jobs}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}